<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="BExIS.Dlm.Entities" namespace="BExIS.Dlm.Entities.Party">
  <class xmlns="urn:nhibernate-mapping-2.2" name="PartyCustomAttributeValue" table="PartyCustomAttributeValues">
    <!-- Mapping BaseEntity properties -->

    <id name = "Id" type="Int64">
      <column name = "Id" />
      <generator class="native" />
    </id>

    <version name = "VersionNo" type="Int32">
      <column name = "VersionNo" />
    </version>

    <property name="Extra" type="System.Xml.XmlDocument, System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <column name = "Extra" not-null="false" sql-type="xml" />
    </property>

    <!-- Mapping DataTuple properties -->
    <property name="Value" type="StringClob">
      <column name="Value" sql-type="text" />
    </property>

    <many-to-one name="CustomAttribute" class="BExIS.Dlm.Entities.Party.PartyCustomAttribute" not-null="true" column="CustomAttributeRef" />

    <many-to-one name="Party" class="BExIS.Dlm.Entities.Party.Party" cascade="save-update" column="PartyRef" />
  </class>
  <!--
  <database-object>
    <create>
      CREATE OR REPLACE FUNCTION public.updatepartyname()
      RETURNS trigger AS $updatepartyname$
      BEGIN
      UPDATE public.parties
      SET name= (SELECT string_agg(value , ' ') AS mainValues
      FROM public.partycustomattributevalues
      inner join public.partycustomattributes on partycustomattributes.id=partycustomattributevalues.customattributeref
      where partycustomattributes.ismain='Y' and partyref=NEW.partyref)
      WHERE id=NEW.partyref;
      RETURN NEW;
      END;
      $updatepartyname$ LANGUAGE plpgsql;

      CREATE TRIGGER updatepartyname
      AFTER INSERT OR UPDATE
      ON public.partycustomattributevalues
      FOR EACH ROW
      EXECUTE PROCEDURE public.updatepartyname();
    </create>
    <drop>
      DROP TRIGGER updatepartyname ON public.partycustomattributevalues;
      DROP FUNCTION public.updatepartyname();
    </drop>
  </database-object>-->
</hibernate-mapping>